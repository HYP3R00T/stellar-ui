---
import { capitalizeFirstLetter } from "@/lib/utils";
import type { SideNavMenuProps } from "@/lib/types";
import Link from "../ui/Link.astro";

const { items, level } = Astro.props as SideNavMenuProps;
const pathname: string = new URL(Astro.request.url).pathname;

// To pass the tailwindcss classes to the astro component
const { class: className } = Astro.props;
---

<ul class:list={["list-none! m-0", className]}>
  {
    items
      .filter((item) => !item.draft)
      .map((item) => {
        const label = item.title
          ? capitalizeFirstLetter(item.title)
          : capitalizeFirstLetter(item.id.split("/").pop() || "");
        const classNameLink = `
        ${level === 0 ? "font-semibold!" : "text-text-muted! bg-background-elevated/30!"}
        ${pathname === "/" + item.id ? "text-text-primary! bg-background-elevated/30!" : "no-underline!"}
        `.trim();
        return (
          <Link href={`/components/${item.id}`} class={classNameLink}>
            {label}
          </Link>
        );
      })
  }
</ul>
<!-- <ul class:list={["list-none! m-0", className]}>
  {
    items
      .filter((item) => !item.draft)
      .map((item) => {
        const label = item.title
          ? capitalizeFirstLetter(item.title)
          : capitalizeFirstLetter(item.id.split("/").pop() || "");
        const className = `
        ${level === 0 ? "font-semibold!" : "text-muted-foreground!"}
        ${pathname === "/" + item.id ? "text-primary!" : "no-underline!"}
        `.trim();
        return (
          <li class="w-full">
            <a
              href={`/${item.id}`}
              class={`${className}  text-sm leading-none w-full no-underline!`}
            >
              {label}
            </a>
            {item.children.length > 0 && (
              <Astro.self items={item.children} level={level + 1} />
            )}
          </li>
        );
      })
  }
</ul> -->
