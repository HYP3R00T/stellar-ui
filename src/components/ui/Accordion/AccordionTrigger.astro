---
export interface AccordionTriggerProps {
  target: string;
}

const { target } = Astro.props as AccordionTriggerProps;
---

<button
  class="flex w-full items-center justify-between py-4 text-sm font-medium transition-all hover:underline text-left cursor-pointer"
  aria-expanded="false"
  aria-controls={`accordion-content-${target}`}
  data-target={target}
>
  <slot />
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="20"
    height="20"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    stroke-width="2"
    stroke-linecap="round"
    stroke-linejoin="round"
    class="text-muted-foreground"><path d="m18 15-6-6-6 6"></path></svg
  >
</button>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    document.querySelectorAll("button[data-target]").forEach((btn) => {
      btn.addEventListener("click", () => {
        const target = btn.getAttribute("data-target");
        const content = document.getElementById(`accordion-content-${target}`);

        if (!content) return;

        const isOpen = btn.getAttribute("aria-expanded") === "true";

        btn.setAttribute("aria-expanded", (!isOpen).toString());
        content.style.maxHeight = isOpen ? "0px" : content.scrollHeight + "px";
        btn
          .querySelector("svg")
          ?.style.setProperty(
            "transform",
            isOpen ? "rotate(0deg)" : "rotate(180deg)"
          );
      });
    });
  });
</script>
